{"version":3,"sources":["../../../src/app/app.jsx"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["var React = require('react');\nvar ReactDOM = require('react-dom');\nvar Router = require('react-router');\nvar {Route, IndexRoute, Link} = Router;\nvar ReactBootstrap = require('react-bootstrap');\nvar {Grid, Row, Col, ProgressBar} = ReactBootstrap;\nvar Deck = require('../components/deck').default;\nvar Card = require('../components/card').default;\nvar Dice = require('../components/dice').default;\nvar Reducer = require('../components/reducer').default;\nvar Bar = require('../components/bar').default;\nimport { createStore } from 'redux'\n\nlet store = (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(Reducer.reduce, Reducer.initialState);\n\nvar App = React.createClass({\n  render: function () {\n    return (\n      <div className=\"App\">\n        {this.props.children}\n      </div>\n    );\n  }\n});\n\nvar HomePage = React.createClass({\n  handlePlayerDraw: function () {\n    store.dispatch({ type: 'PLAYER-DRAW' });\n    this.forceUpdate();\n  },\n\n  handleLocationDraw: function () {\n    store.dispatch({ type: 'LOCATION-DRAW' });\n    this.forceUpdate();\n  },\n\n  handleLocationDiscard: function (id) {\n    store.dispatch({ type: 'DISCARD-LOCATION-CARD', id: id });\n    this.forceUpdate();\n  },\n\n  handlePlayerDiscard: function (id) {\n    store.dispatch({ type: 'DISCARD-PLAYER-CARD', id: id });\n    this.forceUpdate();\n  },\n\n  rollD10: function () {\n    store.dispatch({ type: 'ROLL-D10' });\n    this.forceUpdate();\n  },\n\n  rollD6: function () {\n    store.dispatch({ type: 'ROLL-D6' });\n    this.forceUpdate();\n  },\n\n  rollD4: function () {\n    store.dispatch({ type: 'ROLL-D4' });\n    this.forceUpdate();\n  },\n\n  getCardTextElements: function (text) {\n    var lines, elements, lineCount;\n\n    lines = text.split(\"\\n\");\n    elements = [];\n    lineCount = 0;\n\n    for(var line of lines) {\n      elements.push(<p className='card-line' key={lineCount++}>{line}</p>);\n    }\n    return elements;\n  },\n\n  getLocationCards: function () {\n    var cards;\n\n    cards = [];\n    for (var card of store.getState().locationCards) {\n      cards.push(\n        <Card onDiscard={this.handleLocationDiscard.bind(this, card.id)} key={card.id}>\n          {this.getCardTextElements(card.text)}\n        </Card>\n      );\n    }\n    return cards;\n  },\n\n  getPlayerCards: function () {\n    var cards;\n\n    cards = [];\n    for (var card of store.getState().playerHand) {\n      cards.push(\n        <Card onDiscard={this.handlePlayerDiscard.bind(this, card.id)} onPlay={card.onPlay} key={card.id}>\n          {this.getCardTextElements(card.text)}\n        </Card>\n      );\n    }\n    return cards;\n  },\n\n  getD6Images: function () {\n    return [\n      'assets/d6-1.gif',\n      'assets/d6-2.gif',\n      'assets/d6-3.gif',\n      'assets/d6-4.gif',\n      'assets/d6-5.gif',\n      'assets/d6-6.gif'\n    ];\n  },\n\n  render: function () {\n    return (\n      <Grid className='board'>\n        <Row>\n          <Col componentClass={'span'}>\n            <Deck className='cell' count={store.getState().locationDeck.length} onDraw={this.handleLocationDraw}/>\n          </Col>\n          <Col>\n            <div className='hand cell'>\n              {this.getLocationCards()}\n            </div>\n          </Col>\n        </Row>\n        <Row className='row-small'>\n          <Col>\n            <Dice onRoll={this.rollD6} value={store.getState().d6} images={this.getD6Images()}/>\n          </Col>\n        </Row>\n        <Row className='row-small second-row'>\n          <Col>\n            <Dice onRoll={this.rollD4} value={store.getState().d4} images={this.getD6Images()}/>\n          </Col>\n        </Row>\n        <Row>\n          <Col componentClass={'span'}>\n            <Deck className='cell' count={store.getState().playerDeck.length} onDraw={this.handlePlayerDraw}/>\n          </Col>\n          <Col>\n            <div className='hand cell'>\n              {this.getPlayerCards()}\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Bar\n              className='health-bar'\n              textStyle='health-text'\n              barStyle='success'\n              label='Health'\n              maxValue={store.getState().playerMaxHealth}\n              value={store.getState().playerHealth} />\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n});\n\nvar routes = (\n  <Route component={App} path='/'>\n    <IndexRoute component={HomePage}/>\n  </Route>\n);\n\nReactDOM.render((\n  <Router.Router history={Router.hashHistory}>\n    {routes}\n  </Router.Router>\n), document.getElementById('example'));\n"]}